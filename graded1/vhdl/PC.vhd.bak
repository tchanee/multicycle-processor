library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity PC is
    port(
        clk     : in  std_logic;
        reset_n : in  std_logic;
        en      : in  std_logic;
        sel_a   : in  std_logic;
        sel_imm : in  std_logic;
        add_imm : in  std_logic;
        imm     : in  std_logic_vector(15 downto 0);
        a       : in  std_logic_vector(15 downto 0);
        addr    : out std_logic_vector(31 downto 0)
    );
end PC;

architecture synth of PC is
  constant INCREMENT : std_logic_vector(15 downto 0) := std_logic_vector(to_unsigned(4,16));
  signal s_pc : std_logic_vector(15 downto 0);
begin

  flipflop : process(clk, reset_n)
  begin
    if (reset_n = '0') then
      s_pc <= std_logic_vector(to_unsigned(0,16));
    elsif(rising_edge(clk)) then
      if (en = '1') then
        s_pc <= std_logic_vector(unsigned(s_pc) + unsigned(INCREMENT));
        s_pc(1) <= '0';
        s_pc(0) <= '0';
      end if;  
    end if;
  end process;

  addr <= std_logic_vector(to_unsigned(0,16))&s_pc;

end synth;
